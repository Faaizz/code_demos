version: '3'

services:
  go_simple_chat_app_api:
    depends_on:
      - table-creator
    image: go_simple_chat_app_api
    build:
      context: ..
      dockerfile: .docker/Dockerfile
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      DYNAMODB_ENDPOINT_URL: http://dynamodb-local:8000
      DYNAMODB_TABLE_NAME: ${DYNAMODB_TABLE_NAME}
      DB_TYPE: ${DB_TYPE}
      HTTP_PORT: ${HTTP_PORT}
    ports:
      - '${HTTP_PORT}:${HTTP_PORT}'
    command: ['/bin/sh', '-c', 'sleep 30 && /app/src/go_simple_chat_app_api']

  dynamodb-local:
    command: '-jar DynamoDBLocal.jar -sharedDb -dbPath ./data'
    image: 'amazon/dynamodb-local:latest'
    container_name: dynamodb-local
    ports:
      - '8000:8000'
    volumes:
      - './docker/dynamodb:/home/dynamodblocal/data'
    working_dir: /home/dynamodblocal

  table-creator:
    depends_on:
      - dynamodb-local
    image: banst/awscli
    container_name: table-creator
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      DYNAMODB_TABLE_NAME: ${DYNAMODB_TABLE_NAME}
    command: dynamodb create-table --table-name ${DYNAMODB_TABLE_NAME} --attribute-definitions AttributeName=connectionId,AttributeType=S --key-schema AttributeName=connectionId,KeyType=HASH --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1 --endpoint-url http://dynamodb-local:8000 --region ${AWS_DEFAULT_REGION}
